plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
    alias(libs.plugins.kotlin.parcelize)
}

android {
    namespace "com.flashsphere.privatednsqs"
    compileSdk 35

    defaultConfig {
        applicationId "com.flashsphere.privatednsqs"
        minSdkVersion 28
        targetSdkVersion 35
        versionCode libs.versions.appVersionCode.get().toInteger()
        versionName libs.versions.appVersionName.get()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    kotlin {
        jvmToolchain(21)
    }
    compileOptions {
        sourceCompatibility 21
        targetCompatibility 21
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }
    signingConfigs {
        release {
            storeFile file(PRIVATE_DNS_QS_RELEASE_STORE_FILE)
            storePassword PRIVATE_DNS_QS_RELEASE_STORE_PASSWORD
            keyAlias PRIVATE_DNS_QS_RELEASE_KEY_ALIAS
            keyPassword PRIVATE_DNS_QS_RELEASE_KEY_PASSWORD

            v1SigningEnabled true
            v2SigningEnabled true
            enableV3Signing = true
            enableV4Signing = true
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-SNAPSHOT"
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
    }
}

composeCompiler {
    enableStrongSkippingMode = true

    reportsDestination = layout.buildDirectory.dir("compose_compiler")
    stabilityConfigurationFile = rootProject.layout.projectDirectory.file("stability_config.conf")
}

dependencies {
    implementation(libs.androidx.annotation)
    implementation(libs.androidx.core)
    implementation(libs.androidx.datastore.prefs)
    implementation(libs.androidx.activity.compose)
    implementation(libs.androidx.lifecycle.viewmodel.compose)

    def composeBom = platform(libs.androidx.compose.bom)
    implementation composeBom
    implementation(libs.androidx.compose.ui)
    implementation(libs.androidx.compose.ui.tooling.preview)
    implementation(libs.androidx.compose.foundation)
    implementation(libs.androidx.compose.material.icons.core)
    implementation(libs.androidx.compose.material.icons.extended)
    implementation(libs.androidx.compose.material3)
    debugImplementation(libs.androidx.compose.ui.tooling)
    debugImplementation(libs.androidx.compose.ui.test.manifest)

    implementation(libs.timber)
    implementation(libs.process.phoenix)

    androidTestImplementation composeBom
    androidTestImplementation(libs.androidx.compose.ui.test.junit4)
}
